{"version":3,"sources":["tables/rows.js","tables/rc-table/index.jsx","tables/react-table/index.jsx","tables/material-table/index.jsx","tables/material-ui-table/index.jsx","index.tsx"],"names":["uuid","chargeName","chargeCode","priceType","total","pk1","RcTable","rowKey","columns","title","dataIndex","data","TABLE","styled","table","TH","th","props","colors","isParent","isTotal","propsColors","Object","keys","filter","prop","propsToUse","find","color","includes","TD","td","TD_NONE","sum","vals","reduce","x","y","ReactTable","React","useMemo","Header","accessor","Aggregated","value","aggregate","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","borderCollapse","map","headerGroup","getHeaderGroupProps","headers","column","id","length","getHeaderProps","render","row","getRowProps","cells","cell","index","key","getCellProps","config","field","MaterialTable","maxWidth","options","search","showTitle","paging","padding","useStyles","makeStyles","minWidth","MaterialUiTable","classes","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","align","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da49f0b.chunk.js","sourcesContent":["export default [\r  {\r    uuid: '1',\r    chargeName: \"Vorverkaufsgebühr\",\r    chargeCode: \"VVG-C, 4\",\r    priceType: \"KIND, Kind\",\r    total: '514',\r    pk1: '74'\r  },\r  {\r    uuid: '2',\r    chargeName: \"Vorverkaufsgebühr\",\r    chargeCode: \"VVG-C, 4\",\r    priceType: \"KIND, Kind\",\r    total: '604',\r    pk1: '296'\r  },\r  {\r    uuid: '3',\r    chargeName: \"Vorverkaufsgebühr\",\r    chargeCode: \"VVG-C, 4\",\r    priceType: \"SCHU, Schüler\",\r    total: '265',\r    pk1: '0'\r  },\r  {\r    uuid: '4',\r    chargeName: \"Vorverkaufsgebühr\",\r    chargeCode: \"VVG-C, 4\",\r    priceType: \"SCHU, Schüler\",\r    total: '588.80',\r    pk1: '0'\r  },\r]\r","import React from 'react';\nimport Table from 'rc-table';\n\nimport data from '../rows';\n\nexport default function RcTable() {\n  const config = [\n    {\n      title: \"Charge name\",\n      dataIndex: \"chargeName\",\n    },\n    {\n      title: \"Charge code,number\",\n      dataIndex: \"chargeCode\",\n    },\n    {\n      title: \"Price type code, name\",\n      dataIndex: \"priceType\",\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n    },\n    {\n      title: \"PK1\",\n      dataIndex: \"pk1\",\n    }\n  ];\n\n  return (\n    <div>\n      <h2>rc-table</h2>\n      <Table rowKey=\"uuid\" columns={config} data={data} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport styled from 'styled-components';\n\nimport data from '../rows';\n\nconst TABLE = styled.table`\n  border: 1px solid black;\n  border-collapse: collapse;\n`;\nconst TH = styled.th`\n  border-right: 1px solid black;\n  border-top: 1px solid black;\n  background: ${(props) => {\n    const colors = {\n      isParent: 'gray',\n      isTotal: 'blue'\n    };\n    \n    const propsColors = Object.keys(props)\n      .filter(prop => props[prop]);\n\n    const propsToUse = Object.keys(colors)\n      .find(color => propsColors.includes(color))\n    \n    return !propsToUse\n      ? 'transparent'\n      : colors[propsToUse];\n}}\n`;\nconst TD = styled.td`\n  border: 1px solid black;\n  border-bottom: none;\n  background: ${(props) => !props.isTotal ? 'transparent' : 'blue'}\n`;\nconst TD_NONE = styled.td`\n  visibility: hidden;\n  border: none;\n  border-right: 1px solid black;\n`;\n\nfunction sum(vals) {\n  return vals.reduce((x, y) => x + y, 0);\n}\n\nexport default function ReactTable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Ticket service charges\",\n        columns: [\n          {\n            Header: \"Charge name\",\n            accessor: \"chargeName\",\n          },\n          {\n            Header: \"Charge code,number\",\n            accessor: \"chargeCode\",\n          },\n          {\n            Header: \"Price type code, name\",\n            accessor: \"priceType\",\n          },\n          {\n            Header: \"Total\",\n            accessor: \"total\",\n            Aggregated: props => props.value,\n            aggregate: sum\n          },\n        ]\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\"\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <div>\n      <h2>react-table</h2>\n      <TABLE {...getTableProps()} style={{ borderCollapse: 'collapse'}}>\n        <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => {\n              return (\n                <TH isTotal={column.id === 'total'} isParent={!!column.columns?.length} {...column.getHeaderProps()}>\n                  {column.render(\"Header\")}\n                </TH>\n              );\n            })}\n          </tr>\n        ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                if (row.index > 0 && ['chargeName', 'chargeCode'].includes(cell.column.id)) {\n                  return <TD_NONE key={cell.column.id}/>\n                }\n\n                return (\n                  <TD isTotal={cell.column.id === 'total'} {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </TD>\n                );\n              })}\n            </tr>\n          );\n        })}\n        </tbody>\n      </TABLE>\n    </div>\n  );\n}\n","import React from \"react\";\nimport MaterialTableComponent from 'material-table';\n\nimport data from '../rows';\n\nconst config = [\n  {\n    title: \"Charge name\",\n    field: \"chargeName\",\n  },\n  {\n    title: \"Charge code,number\",\n    field: \"chargeCode\",\n  },\n  {\n    title: \"Price type code, name\",\n    field: \"priceType\",\n  },\n  {\n    title: \"Total\",\n    field: \"total\",\n  },\n  {\n    title: \"PK1\",\n    field: \"pk1\"\n  }\n];\n\nexport default function MaterialTable() {\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <h2>material-table</h2>\n      <MaterialTableComponent\n        options={{\n          search: false,\n          showTitle: false,\n          paging: false,\n          padding: 'dense'\n        }}\n        columns={config}\n        data={data}\n        title=\"Demo Title\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport data from '../rows';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 900,\n  },\n});\n\nexport default function MaterialUiTable() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h2>material UI table</h2>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Charge name</TableCell>\n              <TableCell>Charge code,number</TableCell>\n              <TableCell>Price type code, name</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>PK1</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row.uuid}>\n                <TableCell>{row.chargeName}</TableCell>\n                <TableCell>{row.chargeCode}</TableCell>\n                <TableCell>{row.priceType}</TableCell>\n                <TableCell align=\"right\">{row.total}</TableCell>\n                <TableCell align=\"right\">{row.pk1}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport RcTable from \"./tables/rc-table\";\nimport ReactTable from './tables/react-table'\nimport MaterialTable from \"./tables/material-table\";\nimport MaterialUITable from \"./tables/material-ui-table\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactTable />\n    <hr />\n\n    <RcTable />\n    <hr />\n\n    <MaterialUITable />\n    <hr />\n\n    <MaterialTable />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}