{"version":3,"sources":["tables/rows.js","tables/rc-table/index.jsx","tables/react-table/useRowSpan.js","tables/react-table/index.jsx","tables/material-table/index.jsx","tables/material-ui-table/index.jsx","tables/react-table-mui/useTotals.js","tables/react-table-mui/ContextMenu.js","tables/react-table-mui/makeData.js","tables/react-table-mui/index.jsx","index.tsx"],"names":["uuid","chargeName","chargeCode","priceType","pk1","pk2","RcTable","rowKey","columns","title","dataIndex","data","useRowSpan","hooks","useInstance","push","visibleColumns","instance","plugins","rows","rowSpanEnabled","rowSpanHierarchy","ensurePluginOrder","spanRow","useCallback","row","i","numCells","allCells","length","parentBoundary","j","cell","column","enableRowSpan","topCellValue","value","topCellIndex","spannedRows","rowSpan","isRowSpanned","Object","assign","forEach","pluginName","TABLE","styled","table","TH","th","style","background","color","textAlign","TD","td","config","columnSum","reduce","sum","values","ReactTable","React","useMemo","Header","accessor","Footer","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","preparedRows","map","borderCollapse","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps","group","getFooterGroupProps","getFooterProps","field","MaterialTable","options","search","showTitle","paging","padding","useStyles","makeStyles","minWidth","MaterialUiTable","classes","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","key","align","total","useTotals","prevRowIndex","index","min","initialState","mouseX","mouseY","ContextMenu","children","items","useState","state","setState","handleClose","event","preventDefault","clientX","clientY","cursor","top","left","undefined","item","label","onClick","range","len","arr","newRecord","firstName","namor","generate","words","numbers","lastName","age","Math","floor","random","visits","progress","console","time","lens","makeDataLevel","depth","makeData","timeEnd","log","verticalAlign","backgroundColor","fontWeight","horizontalTotal","ReactTableMaterial","disableSortBy","enableTotal","isTotal","id","totals","0","1","2","order","columnOrder","useColumnOrder","useSortBy","usePagination","finalColumns","setColumnOrder","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","isTableSorted","some","isSorted","moveRight","last","pop","moveLeft","first","rest","CssBaseline","TableContainer","canSort","getSortByToggleProps","Fragment","AggRows","rowIndex","disabled","type","defaultValue","onChange","e","target","Number","width","memo","rowColumnsToAggregateDesc","nextRowCells","configColumnsToAggregate","rowColumnsToAggregate","columnIndex","filter","ind","includes","sort","a","b","getAggColumns","cellAggIndex","aggFunc","minRow","aggRows","slice","columnAvg","Section","section","Title","h2","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeb4be48.chunk.js","sourcesContent":["export default [\r\n  {\r\n    uuid: '1',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 74,\r\n    pk2: 55\r\n  },\r\n  {\r\n    uuid: '2',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 296,\r\n    pk2: 291\r\n  },\r\n  {\r\n    uuid: '3',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 12\r\n  },\r\n  {\r\n    uuid: '4',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 3\r\n  },\r\n  {\r\n    uuid: '5',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 99,\r\n    pk2: 523\r\n  },\r\n  {\r\n    uuid: '6',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 29,\r\n    pk2: 244\r\n  },\r\n]\r\n","import React from 'react';\nimport Table from 'rc-table';\n\nimport data from '../rows';\n\nexport default function RcTable() {\n  const config = [\n    {\n      title: \"Charge name\",\n      dataIndex: \"chargeName\",\n    },\n    {\n      title: \"Charge code,number\",\n      dataIndex: \"chargeCode\",\n    },\n    {\n      title: \"Price type code, name\",\n      dataIndex: \"priceType\",\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n    },\n    {\n      title: \"PK1\",\n      dataIndex: \"pk1\",\n    }\n  ];\n\n  return <Table rowKey=\"uuid\" columns={config} data={data} />\n}\n","import { useCallback } from 'react';\rimport { ensurePluginOrder } from 'react-table';\r\rexport const useRowSpan = hooks => {\r  hooks.useInstance.push(useInstance)\r  hooks.visibleColumns.push(visibleColumns)\r}\r\ruseRowSpan.pluginName = 'useRowSpan';\r\rfunction useInstance(instance) {\r  const {\r    plugins,\r    rows,\r    rowSpanEnabled = true,\r    rowSpanHierarchy = true\r  } = instance;\r\r  ensurePluginOrder(plugins, ['useFilters', 'useSortBy'], 'useRowSpan')\r\r  const spanRow = useCallback((row, i) => {\r    let numCells = row.allCells.length;\r\r    let parentBoundary = false;\r    for (let j = 0; j < numCells; j++) {\r      let cell = row.allCells[j];\r      let column = cell.column;\r\r      if (rowSpanEnabled && column.enableRowSpan) {\r        if (\r          column.topCellValue !== cell.value // we have a non-duplicate cell\r          || cell.value === \"\"             // or we have a blank cell\r          || (rowSpanHierarchy && parentBoundary) // or boundary crossed\r          || column.topCellValue === null // or we are on the first row\r        ) { // this is a top cell.\r          column.topCellValue = cell.value;\r          column.topCellIndex = i;\r          parentBoundary = true;\r          cell.spannedRows = [row];\r          cell.rowSpan = 1;\r          cell.isRowSpanned = false;\r        } else { // cell is a duplicate and should be row-spanned.\r          cell.isRowSpanned = true;\r          // update the top cell. need to reach back in the array.\r          rows[column.topCellIndex].allCells[j].rowSpan++;\r          rows[column.topCellIndex].allCells[j].spannedRows.push(row)\r        }\r      } // else rowspan disabled for this cell - do nothing.\r    }\r    return row;\r  }, [rows, rowSpanEnabled, rowSpanHierarchy]);\r\r  Object.assign(instance, {\r    spanRow\r  })\r}\r\rfunction visibleColumns(columns) {\r  columns.forEach(column => {\r    if (column.enableRowSpan) {\r      column.topCellValue = null;\r      column.topCellIndex = 0;\r    }\r  })\r\r  return columns;\r}\r","import React from \"react\";\nimport {useTable} from \"react-table\";\nimport styled from \"styled-components\";\nimport {useRowSpan} from './useRowSpan';\n\nimport data from \"../rows\";\n\nconst TABLE = styled.table`\n  border: 1px solid black;\n  border-collapse: collapse;\n`;\nconst TH = styled.th`\n  border-right: 1px solid black;\n  border-top: 1px solid black;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  text-align: ${({style}) => style?.textAlign ?? \"left\"};\n`;\nconst TD = styled.td`\n  border: 1px solid black;\n  border-bottom: none;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  font-weight: ${({style}) => style?.['font-weight'] ?? \"400\"};\n  text-aligh: left;\n  vertical-align: top;\n`;\n\nconst config = {\n  total: 2,\n}\n\nconst columnSum = (column, rows) => rows.reduce((sum, row) => sum + row.values?.[column], 0);\n\nexport default function ReactTable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Charge name\",\n        accessor: 'chargeName',\n        Footer: 'Total',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Charge code,number\",\n        accessor: \"chargeCode\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Price type code, name\",\n        accessor: \"priceType\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\",\n        Footer: data => columnSum('pk1', data.rows)\n      },\n      {\n        Header: \"PK2\",\n        accessor: \"pk2\",\n        Footer: data => columnSum('pk2', data.rows)\n      },\n      {\n        Header: \"Total\",\n        uuid: 'horizontalTotal',\n        style: {\n          background: \"red\",\n          color: \"white\",\n          textAlign: 'right'\n        },\n        accessor: (row) => {\n          const columnsToInlude = [\"pk1\", \"pk2\"];\n          return columnsToInlude.reduce((sum, column) => row[column] + sum, 0);\n        },\n        Footer: data => columnSum('Total', data.rows),\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    spanRow,\n  } = useTable({columns, data}, useRowSpan);\n\n  const preparedRows = rows.map((row, i) => {\n    prepareRow(row);\n    return spanRow(row, i);\n  });\n\n  return (\n    <TABLE {...getTableProps()} style={{borderCollapse: \"collapse\"}}>\n      <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column) => {\n            return (\n              <TH style={column.style} {...column.getHeaderProps()}>\n                {column.render(\"Header\")}\n              </TH>\n            );\n          })}\n        </tr>\n      ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n      {preparedRows.map((row, i) => (\n        <tr {...row.getRowProps()}>\n          {row.cells.map(cell => {\n            if (cell.isRowSpanned) return null;\n\n            return (\n              <TD rowSpan={cell.rowSpan} style={cell?.column?.style}\n                  {...cell.getCellProps()}>{cell.render('Cell')}\n              </TD>\n            )\n          })}\n        </tr>\n      ))}\n      </tbody>\n\n      {config.total && (\n        <tfoot>\n        {footerGroups.map(group => (\n          <tr {...group.getFooterGroupProps()}>\n            {group.headers.map(column => {\n              const style = {\n                ...column?.style,\n                background: 'red',\n                color: 'white',\n                textAlign: column.Footer && column.Footer !== 'Total' ? 'right' : 'left'\n              };\n\n              return (\n                <TH style={style} {...column.getFooterProps()}>{column.render(\"Footer\")}</TH>\n              );\n            })}\n          </tr>\n        ))}\n        </tfoot>\n      )}\n    </TABLE>\n  );\n}\n","import React from \"react\";\nimport MaterialTableComponent from 'material-table';\n\nimport data from '../rows';\n\nconst config = [\n  {\n    title: \"Charge name\",\n    field: \"chargeName\",\n  },\n  {\n    title: \"Charge code,number\",\n    field: \"chargeCode\",\n  },\n  {\n    title: \"Price type code, name\",\n    field: \"priceType\",\n  },\n  {\n    title: \"Total\",\n    field: \"total\",\n  },\n  {\n    title: \"PK1\",\n    field: \"pk1\"\n  }\n];\n\nexport default function MaterialTable() {\n  return (\n    <MaterialTableComponent\n      options={{\n        search: false,\n        showTitle: false,\n        paging: false,\n        padding: 'dense'\n      }}\n      columns={config}\n      data={data}\n      title=\"Demo Title\"\n    />\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport data from '../rows';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 900,\n  },\n});\n\nexport default function MaterialUiTable() {\n  const classes = useStyles();\n\n  return (\n    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Charge name</TableCell>\n          <TableCell>Charge code,number</TableCell>\n          <TableCell>Price type code, name</TableCell>\n          <TableCell>Total</TableCell>\n          <TableCell>PK1</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map((row) => (\n          <TableRow key={row.uuid}>\n            <TableCell>{row.chargeName}</TableCell>\n            <TableCell>{row.chargeCode}</TableCell>\n            <TableCell>{row.priceType}</TableCell>\n            <TableCell align=\"right\">{row.total}</TableCell>\n            <TableCell align=\"right\">{row.pk1}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useCallback } from 'react';\r\nimport { ensurePluginOrder } from 'react-table';\r\n\r\nexport const useTotals = hooks => {\r\n  hooks.useInstance.push(useInstance);\r\n  hooks.visibleColumns.push(visibleColumns);\r\n}\r\n\r\nuseTotals.pluginName = 'useTotals';\r\n\r\nfunction useInstance(instance) {\r\n  const {\r\n    plugins,\r\n    rows,\r\n    rowSpanEnabled = true,\r\n    rowSpanHierarchy = true\r\n  } = instance;\r\n\r\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters', 'useSortBy'], 'useTotals');\r\n\r\n  const spanRow = useCallback((row, i) => {\r\n    let numCells = row.allCells.length;\r\n\r\n    let parentBoundary = false;\r\n    for (let j = 0; j < numCells; j++) {\r\n      let cell = row.allCells[j];\r\n      let column = cell.column;\r\n\r\n      if (rowSpanEnabled && column.enableRowSpan) {\r\n        if (\r\n          column.topCellValue !== cell.value // we have a non-duplicate cell\r\n          || cell.value === \"\"             // or we have a blank cell\r\n          || (rowSpanHierarchy && parentBoundary) // or boundary crossed\r\n          || column.topCellValue === null // or we are on the first row\r\n        ) { // this is a top cell.\r\n          if (i !== 0) {\r\n            const prevRowIndex = row.index === (rows.length - 1)\r\n              ? i\r\n              : i - 1;\r\n\r\n            rows[prevRowIndex].allCells[j].min = column.topCellIndex;\r\n          }\r\n\r\n          column.topCellValue = cell.value;\r\n          column.topCellIndex = i;\r\n          // parentBoundary = true;\r\n          cell.isRowSpanned = false;\r\n        } else { // cell is a duplicate and should be row-spanned.\r\n          cell.isRowSpanned = true;\r\n          // update the top cell. need to reach back in the array.\r\n          /* todo\r\n            rows[column.topCellIndex].allCells[j].rowSpan++;\r\n            rows[column.topCellIndex].allCells[j].spannedRows.push(row);\r\n          */\r\n        }\r\n      } // else rowspan disabled for this cell - do nothing.\r\n    }\r\n\r\n    return row;\r\n  }, [rows, rowSpanEnabled, rowSpanHierarchy]);\r\n\r\n  Object.assign(instance, {\r\n    spanRow\r\n  })\r\n}\r\n\r\nfunction visibleColumns(columns) {\r\n  columns.forEach(column => {\r\n    if (column.enableRowSpan) {\r\n      column.topCellValue = null;\r\n      column.topCellIndex = 0;\r\n    }\r\n  })\r\n\r\n  return columns;\r\n}\r\n","import React from 'react';\rimport Menu from '@material-ui/core/Menu';\rimport MenuItem from '@material-ui/core/MenuItem';\r\rconst initialState = {\r  mouseX: null,\r  mouseY: null,\r};\r\rexport default function ContextMenu({ children, items }) {\r  const [state, setState] = React.useState(initialState);\r\r  const handleClick = (event) => {\r    event.preventDefault();\r    setState({\r      mouseX: event.clientX - 2,\r      mouseY: event.clientY - 4,\r    });\r  };\r\r  const handleClose = () => {\r    setState(initialState);\r  };\r\r  if (!items || !items.length) return children;\r\r  return (\r    <div onContextMenu={handleClick} style={{ cursor: 'context-menu' }}>\r      {children}\r      <Menu\r        keepMounted\r        open={state.mouseY !== null}\r        onClose={handleClose}\r        anchorReference=\"anchorPosition\"\r        anchorPosition={\r          state.mouseY !== null && state.mouseX !== null\r            ? { top: state.mouseY, left: state.mouseX }\r            : undefined\r        }\r      >\r        {items?.map(item => (\r          <MenuItem\r            key={item.label}\r            onClick={(event) => {\r              item.onClick(event);\r              handleClose();\r            }}>{item.label}</MenuItem>\r        ))}\r      </Menu>\r    </div>\r  );\r}\r","import namor from 'namor'\r\rconst range = len => {\r  const arr = []\r  for (let i = 0; i < len; i++) {\r    arr.push(i)\r  }\r  return arr\r}\r\rconst newRecord = (i) => {\r  return {\r    firstName: namor.generate({ words: 1, numbers: 0 }),\r    lastName: namor.generate({ words: 1, numbers: 0 }),\r    age: Math.floor(Math.random() * 30),\r    visits: Math.floor(Math.random() * 100),\r    progress: Math.floor(Math.random() * 100),\r    uuid: `${Math.floor(Math.random() * 100000000)}-${Math.floor(Math.random() * 100000000)}}`,\r    chargeName: \"Vorverkaufsgebühr\",\r    chargeCode: \"VVG-C, 4\",\r    priceType: i % 3 === 0 ? \"KIND, Kind\" : \"SCHU, Schüler\",\r    pk1: Math.floor(Math.random() * 10000),\r    pk2: Math.floor(Math.random() * 10000),\r}};\r\rfunction makeData(...lens) {\r  const makeDataLevel = (depth = 0) => {\r    const len = lens[depth]\r    return range(len).map(i => {\r      return {\r        ...newRecord(i),\r        // subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r      }\r    })\r  }\r\r  return makeDataLevel()\r}\rconsole.time('dataset');\rexport const rows = makeData(500);\rconsole.timeEnd('dataset');\r\rconsole.log(rows.length);\r\r\r\r","import React from \"react\";\nimport {useTable, useSortBy, useColumnOrder, usePagination} from \"react-table\";\nimport {useTotals} from './useTotals';\n\nimport MaUTable from '@material-ui/core/Table'\nimport TableRow from '@material-ui/core/TableRow'\nimport {TableContainer} from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nimport SortIcon from '@material-ui/icons/Sort';\n\nimport ContextMenu from './ContextMenu';\n\nimport {rows as data} from './makeData';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 800,\n    textAlign: 'left'\n  },\n  td: {\n    verticalAlign: 'top'\n  },\n  total: {\n    backgroundColor: '#e0f5ff',\n    color: '#404040',\n    fontWeight: 800\n  }\n});\n\nconst columnSum = (column, rows) => rows.reduce((sum, row) => sum + row.values?.[column], 0);\nconst columnAvg = (column, rows) => columnSum(column, rows) / rows.length;\n\nconst horizontalTotal = (row) => {\n  const columnsToInclude = [\"pk1\", \"pk2\"];\n  return columnsToInclude.reduce((sum, column) => row[column] + sum, 0);\n};\n\nexport default function ReactTableMaterial() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Charge name\",\n        accessor: 'chargeName',\n        enableRowSpan: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"Charge code,number\",\n        accessor: \"chargeCode\",\n        enableRowSpan: true,\n        disableSortBy: true\n      },\n      {\n        Header: \"Price type code, name\",\n        accessor: \"priceType\",\n        enableRowSpan: true,\n        disableSortBy: true\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\",\n        enableTotal: true,\n      },\n      {\n        Header: \"PK2\",\n        accessor: \"pk2\",\n      },\n      {\n        Header: \"Total\",\n        isTotal: true,\n        id: 'total',\n        accessor: horizontalTotal,\n        enableTotal: true,\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    spanRow,\n    state,\n    columns: finalColumns,\n    setColumnOrder,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      totals: {\n        config: {\n          0: ['sum', 'count'],\n          1: ['sum'],\n          2: ['sum', 'avg', 'count'],\n        },\n        order: [0, 1, 2]\n      },\n      columnOrder: columns.map(column => column.id || column.accessor)\n    }\n  }, useColumnOrder, useSortBy, usePagination, useTotals);\n\n  const { pageIndex, pageSize } = state;\n\n  const preparedRows = page.map((row, i) => {\n    prepareRow(row);\n    return spanRow(row, i);\n  });\n\n  const isTableSorted = finalColumns.some(column => column.isSorted);\n\n  const classes = useStyles();\n\n  const moveRight = () => {\n    const last = state.columnOrder.pop();\n    setColumnOrder([last, ...state.columnOrder])\n  }\n\n  const moveLeft = () => {\n    const [first, ...rest] = state.columnOrder;\n    setColumnOrder([...rest, first])\n  }\n\n  return (\n    <div>\n      <CssBaseline/>\n\n      <TableContainer>\n        <MaUTable className={classes.table} {...getTableProps()} size=\"small\">\n          <TableHead>\n            {headerGroups.map((headerGroup) => (\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => {\n                  const style = column.isTotal\n                    ? classes.total\n                    : classes.td;\n\n                  return (\n                    <TableCell\n                      className={style}\n                      key={column.id} {...column.getHeaderProps()}>\n                      <ContextMenu\n                        items={[{\n                          label: 'Move Right',\n                          onClick: moveRight\n                        }, {\n                          label: 'Move Left',\n                          onClick: moveLeft\n                        }]}\n                      >\n                      {column.render(\"Header\")}\n                        {' '}\n                        {column.canSort && <SortIcon onClick={column.getSortByToggleProps()?.onClick}  />}\n                      {/*<span>*/}\n                      {/*  {column.isSorted*/}\n                      {/*    ? column.isSortedDesc*/}\n                      {/*      ? ' 🔽'*/}\n                      {/*      : ' 🔼'*/}\n                      {/*    : ''}*/}\n                      {/*</span>*/}\n                      </ContextMenu>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHead>\n\n          <TableBody {...getTableBodyProps()}>\n            {preparedRows.map((row, i) => (\n              <React.Fragment key={row.id}>\n                <TableRow {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    const style = cell.column.isTotal\n                      ? classes.total\n                      : classes.td;\n\n                    if (!isTableSorted && cell.isRowSpanned) {\n                      return <TableCell className={classes.td} key={cell.column.id}></TableCell>\n                    }\n\n                    return (\n                      <TableCell className={style} key={cell.column.id}\n                                 rowSpan={cell.rowSpan} {...cell.getCellProps()}>\n                        {cell.render('Cell')}\n                      </TableCell>\n                    )\n                  })}\n                </TableRow>\n\n                <AggRows rowIndex={i} cells={row.cells} rows={rows} isTableSorted={isTableSorted}\n                         totals={state.totals}/>\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </MaUTable>\n      </TableContainer>\n\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50, 100, 200].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nconst getAggColumns = (rows, rowIndex, cells, totals) => {\n  const nextRowCells = rows[rowIndex + 1]?.cells;\n  const configColumnsToAggregate = totals.order;\n\n  const rowColumnsToAggregate = configColumnsToAggregate\n    .map(columnIndex => (\n      cells[columnIndex]?.isRowSpanned && !nextRowCells?.[columnIndex]?.isRowSpanned\n      || !cells[columnIndex]?.isRowSpanned && !nextRowCells?.[columnIndex]?.isRowSpanned\n        ? columnIndex\n        : null\n    ))\n    .filter(ind => ind !== null);\n\n  if (!rowColumnsToAggregate.length || !configColumnsToAggregate.some(ind => rowColumnsToAggregate.includes(ind))) return null;\n  // console.log('rowColumnsToAggregate inner: ', rowColumnsToAggregate)\n  return configColumnsToAggregate.filter(ind => rowColumnsToAggregate.includes(ind)).sort((a, b) => b - a);\n};\n\nconst AggRows = React.memo(({cells, rows, totals, rowIndex, isTableSorted}) => {\n  if (isTableSorted) return null;\n\n  const rowColumnsToAggregateDesc = getAggColumns(rows, rowIndex, cells, totals);\n  if (!rowColumnsToAggregateDesc) return null;\n\n  return (\n    rowColumnsToAggregateDesc.map(cellAggIndex => (\n      totals.config[cellAggIndex].map(aggFunc => (\n        <TableRow key={aggFunc}>\n          {cells.map((cell, columnIndex) => {\n            if (columnIndex < cellAggIndex) {\n              return <TableCell key={cell.column.id}></TableCell>;\n            }\n\n            const minRow = cell?.min || 0;\n            const aggRows = rows.slice(minRow, rowIndex + 1);\n\n            return (\n              <TableCell key={cell.column.id} style={{backgroundColor: '#e0f5ff', color: '#404040', fontWeight: 800}}>\n                {aggFunc === 'sum' && cellAggIndex === columnIndex && 'Total'}\n                {aggFunc === 'count' && cellAggIndex === columnIndex && 'Count'}\n                {aggFunc === 'avg' && cellAggIndex === columnIndex && 'Average'}\n\n                {cellAggIndex !== columnIndex && cell.column.enableTotal && aggFunc === \"sum\" && columnSum(cell.column.id, aggRows)}\n                {cellAggIndex !== columnIndex && cell.column.enableTotal && aggFunc === \"avg\" && columnAvg(cell.column.id, aggRows)}\n                {cellAggIndex !== columnIndex && cell.column.enableTotal && aggFunc === \"count\" && aggRows.length}\n              </TableCell>\n            )\n          })}\n        </TableRow>\n      ))\n    )));\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nimport RcTable from \"./tables/rc-table\";\nimport ReactTable from './tables/react-table'\nimport MaterialTable from \"./tables/material-table\";\nimport MaterialUITable from \"./tables/material-ui-table\";\nimport ReactTableMaterial from \"./tables/react-table-mui\";\n\nconst Section = styled.section`\n    margin-bottom: 50px;\n    padding-bottom: 50px;\n    border-bottom: 1px dotted rgba(0,0,0, .5);\n`;\n\nconst Title = styled.h2`\n    font-weight: 400;\n`;\n\nReactDOM.render(\n    <React.StrictMode>\n        <Section>\n            <Title>React Table + Material UI</Title>\n            <ReactTableMaterial/>\n        </Section>\n\n        <Section>\n            <Title>React Table</Title>\n            <ReactTable/>\n        </Section>\n\n        <Section>\n            <Title>RC Table</Title>\n            <RcTable/>\n        </Section>\n\n        <Section>\n            <Title>Material UI Table</Title>\n            <MaterialUITable/>\n        </Section>\n\n        <Section>\n            <Title>Material-Table</Title>\n            <MaterialTable/>\n        </Section>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}