{"version":3,"sources":["tables/rows.js","tables/rc-table/index.jsx","tables/react-table/useRowSpan.js","tables/react-table/index.jsx","tables/material-table/index.jsx","tables/material-ui-table/index.jsx","tables/react-table-mui/useRowSpan.js","tables/react-table-mui/index.jsx","index.tsx"],"names":["uuid","chargeName","chargeCode","priceType","pk1","pk2","RcTable","rowKey","columns","title","dataIndex","data","useRowSpan","hooks","useInstance","push","visibleColumns","instance","plugins","rows","rowSpanEnabled","rowSpanHierarchy","ensurePluginOrder","spanRow","useCallback","row","i","numCells","allCells","length","parentBoundary","j","cell","column","enableRowSpan","topCellValue","value","topCellIndex","spannedRows","rowSpan","isRowSpanned","Object","assign","forEach","pluginName","TABLE","styled","table","TH","th","style","background","color","textAlign","TD","td","config","columnSum","reduce","sum","values","ReactTable","React","useMemo","Header","accessor","Footer","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","preparedRows","map","borderCollapse","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps","group","getFooterGroupProps","getFooterProps","field","MaterialTable","options","search","showTitle","paging","padding","useStyles","makeStyles","minWidth","MaterialUiTable","classes","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","key","align","total","verticalAlign","aggregations","0","ReactTableMaterial","agg","CssBaseline","TableContainer","backgroundColor","id","Fragment","rowIndex","AggRows","aggFunc","columnIndex","fontWeight","Section","section","Title","h2","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d12cfdd5.chunk.js","sourcesContent":["export default [\r\n  {\r\n    uuid: '1',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 74,\r\n    pk2: 55\r\n  },\r\n  {\r\n    uuid: '2',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 296,\r\n    pk2: 291\r\n  },\r\n  {\r\n    uuid: '3',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 12\r\n  },\r\n  {\r\n    uuid: '4',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 3\r\n  },\r\n]\r\n","import React from 'react';\nimport Table from 'rc-table';\n\nimport data from '../rows';\n\nexport default function RcTable() {\n  const config = [\n    {\n      title: \"Charge name\",\n      dataIndex: \"chargeName\",\n    },\n    {\n      title: \"Charge code,number\",\n      dataIndex: \"chargeCode\",\n    },\n    {\n      title: \"Price type code, name\",\n      dataIndex: \"priceType\",\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n    },\n    {\n      title: \"PK1\",\n      dataIndex: \"pk1\",\n    }\n  ];\n\n  return <Table rowKey=\"uuid\" columns={config} data={data} />\n}\n","import { useCallback } from 'react';\rimport { ensurePluginOrder } from 'react-table';\r\rexport const useRowSpan = hooks => {\r  hooks.useInstance.push(useInstance)\r  hooks.visibleColumns.push(visibleColumns)\r}\r\ruseRowSpan.pluginName = 'useRowSpan';\r\rfunction useInstance(instance) {\r  const {\r    plugins,\r    rows,\r    rowSpanEnabled = true,\r    rowSpanHierarchy = true\r  } = instance;\r\r  ensurePluginOrder(plugins, ['useFilters', 'useSortBy'], 'useRowSpan')\r\r  const spanRow = useCallback((row, i) => {\r    let numCells = row.allCells.length;\r\r    let parentBoundary = false;\r    for (let j = 0; j < numCells; j++) {\r      let cell = row.allCells[j];\r      let column = cell.column;\r\r      if (rowSpanEnabled && column.enableRowSpan) {\r        if (\r          column.topCellValue !== cell.value // we have a non-duplicate cell\r          || cell.value === \"\"             // or we have a blank cell\r          || (rowSpanHierarchy && parentBoundary) // or boundary crossed\r          || column.topCellValue === null // or we are on the first row\r        ) { // this is a top cell.\r          column.topCellValue = cell.value;\r          column.topCellIndex = i;\r          parentBoundary = true;\r          cell.spannedRows = [row];\r          cell.rowSpan = 1;\r          cell.isRowSpanned = false;\r        } else { // cell is a duplicate and should be row-spanned.\r          cell.isRowSpanned = true;\r          // update the top cell. need to reach back in the array.\r          rows[column.topCellIndex].allCells[j].rowSpan++;\r          rows[column.topCellIndex].allCells[j].spannedRows.push(row)\r        }\r      } // else rowspan disabled for this cell - do nothing.\r    }\r    return row;\r  }, [rows, rowSpanEnabled, rowSpanHierarchy]);\r\r  Object.assign(instance, {\r    spanRow\r  })\r}\r\rfunction visibleColumns(columns) {\r  columns.forEach(column => {\r    if (column.enableRowSpan) {\r      column.topCellValue = null;\r      column.topCellIndex = 0;\r    }\r  })\r\r  return columns;\r}\r","import React from \"react\";\nimport {useTable} from \"react-table\";\nimport styled from \"styled-components\";\nimport {useRowSpan} from './useRowSpan';\n\nimport data from \"../rows\";\n\nconst TABLE = styled.table`\n  border: 1px solid black;\n  border-collapse: collapse;\n`;\nconst TH = styled.th`\n  border-right: 1px solid black;\n  border-top: 1px solid black;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  text-align: ${({style}) => style?.textAlign ?? \"left\"};\n`;\nconst TD = styled.td`\n  border: 1px solid black;\n  border-bottom: none;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  font-weight: ${({style}) => style?.['font-weight'] ?? \"400\"};\n  text-aligh: left;\n  vertical-align: top;\n`;\n\nconst config = {\n  total: 2,\n}\n\nconst columnSum = (column, rows) => rows.reduce((sum, row) => sum + row.values?.[column], 0);\n\nexport default function ReactTable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Charge name\",\n        accessor: 'chargeName',\n        Footer: 'Total',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Charge code,number\",\n        accessor: \"chargeCode\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Price type code, name\",\n        accessor: \"priceType\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\",\n        Footer: data => columnSum('pk1', data.rows)\n      },\n      {\n        Header: \"PK2\",\n        accessor: \"pk2\",\n        Footer: data => columnSum('pk2', data.rows)\n      },\n      {\n        Header: \"Total\",\n        uuid: 'horizontalTotal',\n        style: {\n          background: \"red\",\n          color: \"white\",\n          textAlign: 'right'\n        },\n        accessor: (row) => {\n          const columnsToInlude = [\"pk1\", \"pk2\"];\n          return columnsToInlude.reduce((sum, column) => row[column] + sum, 0);\n        },\n        Footer: data => columnSum('Total', data.rows),\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    spanRow,\n  } = useTable({columns, data}, useRowSpan);\n\n  const preparedRows = rows.map((row, i) => {\n    prepareRow(row);\n    return spanRow(row, i);\n  });\n\n  return (\n    <TABLE {...getTableProps()} style={{borderCollapse: \"collapse\"}}>\n      <thead>\n      {headerGroups.map((headerGroup) => (\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column) => {\n            return (\n              <TH style={column.style} {...column.getHeaderProps()}>\n                {column.render(\"Header\")}\n              </TH>\n            );\n          })}\n        </tr>\n      ))}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n      {preparedRows.map((row, i) => (\n        <tr {...row.getRowProps()}>\n          {row.cells.map(cell => {\n            if (cell.isRowSpanned) return null;\n\n            return (\n              <TD rowSpan={cell.rowSpan} style={cell?.column?.style}\n                  {...cell.getCellProps()}>{cell.render('Cell')}\n              </TD>\n            )\n          })}\n        </tr>\n      ))}\n      </tbody>\n\n      {config.total && (\n        <tfoot>\n        {footerGroups.map(group => (\n          <tr {...group.getFooterGroupProps()}>\n            {group.headers.map(column => {\n              const style = {\n                ...column?.style,\n                background: 'red',\n                color: 'white',\n                textAlign: column.Footer && column.Footer !== 'Total' ? 'right' : 'left'\n              };\n\n              return (\n                <TH style={style} {...column.getFooterProps()}>{column.render(\"Footer\")}</TH>\n              );\n            })}\n          </tr>\n        ))}\n        </tfoot>\n      )}\n    </TABLE>\n  );\n}\n","import React from \"react\";\nimport MaterialTableComponent from 'material-table';\n\nimport data from '../rows';\n\nconst config = [\n  {\n    title: \"Charge name\",\n    field: \"chargeName\",\n  },\n  {\n    title: \"Charge code,number\",\n    field: \"chargeCode\",\n  },\n  {\n    title: \"Price type code, name\",\n    field: \"priceType\",\n  },\n  {\n    title: \"Total\",\n    field: \"total\",\n  },\n  {\n    title: \"PK1\",\n    field: \"pk1\"\n  }\n];\n\nexport default function MaterialTable() {\n  return (\n    <MaterialTableComponent\n      options={{\n        search: false,\n        showTitle: false,\n        paging: false,\n        padding: 'dense'\n      }}\n      columns={config}\n      data={data}\n      title=\"Demo Title\"\n    />\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport data from '../rows';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 900,\n  },\n});\n\nexport default function MaterialUiTable() {\n  const classes = useStyles();\n\n  return (\n    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Charge name</TableCell>\n          <TableCell>Charge code,number</TableCell>\n          <TableCell>Price type code, name</TableCell>\n          <TableCell>Total</TableCell>\n          <TableCell>PK1</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map((row) => (\n          <TableRow key={row.uuid}>\n            <TableCell>{row.chargeName}</TableCell>\n            <TableCell>{row.chargeCode}</TableCell>\n            <TableCell>{row.priceType}</TableCell>\n            <TableCell align=\"right\">{row.total}</TableCell>\n            <TableCell align=\"right\">{row.pk1}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useCallback } from 'react';\rimport { ensurePluginOrder } from 'react-table';\r\rexport const useRowSpan = hooks => {\r  hooks.useInstance.push(useInstance)\r  hooks.visibleColumns.push(visibleColumns)\r}\r\ruseRowSpan.pluginName = 'useRowSpan';\r\rfunction useInstance(instance) {\r  const {\r    plugins,\r    rows,\r    rowSpanEnabled = true,\r    rowSpanHierarchy = true\r  } = instance;\r\r  ensurePluginOrder(plugins, ['useFilters', 'useSortBy'], 'useRowSpan')\r\r  const spanRow = useCallback((row, i) => {\r    let numCells = row.allCells.length;\r\r    let parentBoundary = false;\r    for (let j = 0; j < numCells; j++) {\r      let cell = row.allCells[j];\r      let column = cell.column;\r\r      if (rowSpanEnabled && column.enableRowSpan) {\r        if (\r          column.topCellValue !== cell.value // we have a non-duplicate cell\r          || cell.value === \"\"             // or we have a blank cell\r          || (rowSpanHierarchy && parentBoundary) // or boundary crossed\r          || column.topCellValue === null // or we are on the first row\r        ) { // this is a top cell.\r          column.topCellValue = cell.value;\r          column.topCellIndex = i;\r          parentBoundary = true;\r          cell.spannedRows = [row];\r          cell.rowSpan = 1;\r          cell.isRowSpanned = false;\r        } else { // cell is a duplicate and should be row-spanned.\r          cell.isRowSpanned = true;\r          // update the top cell. need to reach back in the array.\r          rows[column.topCellIndex].allCells[j].rowSpan++;\r          rows[column.topCellIndex].allCells[j].spannedRows.push(row)\r        }\r      } // else rowspan disabled for this cell - do nothing.\r    }\r\r    return row;\r  }, [rows, rowSpanEnabled, rowSpanHierarchy]);\r\r  Object.assign(instance, {\r    spanRow\r  })\r}\r\rfunction visibleColumns(columns) {\r  columns.forEach(column => {\r    if (column.enableRowSpan) {\r      column.topCellValue = null;\r      column.topCellIndex = 0;\r    }\r  })\r\r  return columns;\r}\r","import React from \"react\";\nimport {useTable} from \"react-table\";\nimport {useRowSpan} from './useRowSpan';\n\nimport {TableContainer} from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport MaUTable from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport data from \"../rows\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 800,\n    textAlign: 'left'\n  },\n  td: {\n    verticalAlign: 'top'\n  }\n});\n\nconst aggregations = {\n  0: ['sum', 'count'],\n};\n\nconst columnSum = (column, rows) => rows.reduce((sum, row) => sum + row.values?.[column], 0);\n\nexport default function ReactTableMaterial() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Charge name\",\n        accessor: 'chargeName',\n        enableRowSpan: true,\n      },\n      {\n        Header: \"Charge code,number\",\n        accessor: \"chargeCode\",\n        enableRowSpan: true\n      },\n      {\n        Header: \"Price type code, name\",\n        accessor: \"priceType\",\n        enableRowSpan: true\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\",\n        agg: true,\n      },\n      {\n        Header: \"PK2\",\n        accessor: \"pk2\",\n        agg: true,\n      },\n      {\n        Header: \"Total\",\n        uuid: 'horizontalTotal',\n        accessor: (row) => {\n          const columnsToInlude = [\"pk1\", \"pk2\"];\n          return columnsToInlude.reduce((sum, column) => row[column] + sum, 0);\n        },\n        agg: true,\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    spanRow,\n  } = useTable({columns, data}, useRowSpan);\n\n  const preparedRows = rows.map((row, i) => {\n    prepareRow(row);\n    return spanRow(row, i);\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <CssBaseline/>\n\n      <TableContainer>\n        <MaUTable className={classes.table} {...getTableProps()} size=\"small\">\n          <TableHead>\n            {headerGroups.map((headerGroup) => (\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <TableCell style={{ backgroundColor: '#f0f0f0', color: '#404040'}} key={column.id} {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n\n          <TableBody {...getTableBodyProps()}>\n            {preparedRows.map((row, i) => (\n              <React.Fragment key={row.id}>\n                <TableRow {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    if (cell.isRowSpanned) return null;\n\n                    return (\n                      <TableCell className={classes.td} key={cell.column.id}\n                                 rowSpan={cell.rowSpan} {...cell.getCellProps()}>\n                        {cell.render('Cell')}\n                      </TableCell>\n                    )\n                  })}\n                </TableRow>\n\n                <AggRows rowIndex={i} cells={row.cells} rows={rows} aggregations={aggregations}  />\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </MaUTable>\n      </TableContainer>\n    </div>\n  );\n}\n\nconst AggRows = ({ cells, rows, aggregations, rowIndex }) => {\n  if (!aggregations || rowIndex !== rows.length - 1) return null;\n\n  return (\n    aggregations[0].map(aggFunc => (\n      <TableRow key={aggFunc}>\n        {cells.map((cell, columnIndex) => {\n          return (\n            <TableCell key={cell.column.id} style={{ backgroundColor: '#e0f5ff', color: '#404040', fontWeight: 800 }}>\n              {aggregations[columnIndex] && aggFunc === 'sum' && 'Total'}\n              {aggregations[columnIndex] && aggFunc === 'count' && 'Count'}\n\n              {!aggregations[columnIndex] && cell.column.agg && aggFunc === \"sum\" && columnSum(cell.column.id, rows)}\n              {!aggregations[columnIndex] && cell.column.agg && aggFunc === \"count\" && rows.length}\n            </TableCell>\n          )\n        })}\n      </TableRow>\n    ))\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nimport RcTable from \"./tables/rc-table\";\nimport ReactTable from './tables/react-table'\nimport MaterialTable from \"./tables/material-table\";\nimport MaterialUITable from \"./tables/material-ui-table\";\nimport ReactTableMaterial from \"./tables/react-table-mui\";\n\nconst Section = styled.section`\n    margin-bottom: 50px;\n    padding-bottom: 50px;\n    border-bottom: 1px dotted rgba(0,0,0, .5);\n`;\n\nconst Title = styled.h2`\n    font-weight: 400;\n`;\n\nReactDOM.render(\n    <React.StrictMode>\n        <Section>\n            <Title>React Table + Material UI</Title>\n            <ReactTableMaterial/>\n        </Section>\n\n        <Section>\n            <Title>React Table</Title>\n            <ReactTable/>\n        </Section>\n\n        <Section>\n            <Title>RC Table</Title>\n            <RcTable/>\n        </Section>\n\n        <Section>\n            <Title>Material UI Table</Title>\n            <MaterialUITable/>\n        </Section>\n\n        <Section>\n            <Title>Material-Table</Title>\n            <MaterialTable/>\n        </Section>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}