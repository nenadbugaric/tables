{"version":3,"sources":["tables/rows.js","tables/rc-table/index.jsx","tables/react-table/useRowSpan.js","tables/react-table/index.jsx","tables/material-table/index.jsx","tables/material-ui-table/index.jsx","index.tsx"],"names":["uuid","chargeName","chargeCode","priceType","pk1","pk2","RcTable","rowKey","columns","title","dataIndex","data","useRowSpan","hooks","useInstance","push","visibleColumns","instance","plugins","rows","rowSpanEnabled","rowSpanHierarchy","ensurePluginOrder","spanRow","useCallback","row","i","console","log","numCells","allCells","length","parentBoundary","j","cell","column","enableRowSpan","topCellValue","value","topCellIndex","spannedRows","rowSpan","isRowSpanned","Object","assign","forEach","pluginName","TABLE","styled","table","TH","th","style","background","color","TD","td","config","columnSum","reduce","sum","values","ReactTable","React","useMemo","Header","accessor","Footer","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","preparedRows","map","borderCollapse","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps","group","getFooterGroupProps","getFooterProps","field","MaterialTable","maxWidth","options","search","showTitle","paging","padding","useStyles","makeStyles","minWidth","MaterialUiTable","classes","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","key","align","total","ReactDOM","StrictMode","document","getElementById"],"mappings":"6LAAe,GACb,CACEA,KAAM,IACNC,WAAY,uBACZC,WAAY,WACZC,UAAW,aACXC,IAAK,GACLC,IAAK,IAEP,CACEL,KAAM,IACNC,WAAY,uBACZC,WAAY,WACZC,UAAW,aACXC,IAAK,IACLC,IAAK,KAEP,CACEL,KAAM,IACNC,WAAY,uBACZC,WAAY,WACZC,UAAW,mBACXC,IAAK,EACLC,IAAK,IAEP,CACEL,KAAM,IACNC,WAAY,uBACZC,WAAY,WACZC,UAAW,mBACXC,IAAK,EACLC,IAAK,IC1BM,SAASC,IAwBtB,OACE,6BACE,wCACA,kBAAC,IAAD,CAAOC,OAAO,OAAOC,QA1BV,CACb,CACEC,MAAO,cACPC,UAAW,cAEb,CACED,MAAO,qBACPC,UAAW,cAEb,CACED,MAAO,wBACPC,UAAW,aAEb,CACED,MAAO,QACPC,UAAW,SAEb,CACED,MAAO,MACPC,UAAW,QAO2BC,KAAMA,K,wCC7BrCC,EAAa,SAAAC,GACxBA,EAAMC,YAAYC,KAAKD,GACvBD,EAAMG,eAAeD,KAAKC,IAK5B,SAASF,EAAYG,GAAU,IAE3BC,EAIED,EAJFC,QACAC,EAGEF,EAHFE,KAH2B,EAMzBF,EAFFG,sBAJ2B,WAMzBH,EADFI,wBAL2B,SAQ7BC,4BAAkBJ,EAAS,CAAC,aAAc,aAAc,cAExD,IAAMK,EAAUC,uBAAY,SAACC,EAAKC,GAChCC,QAAQC,IAAI,UAIZ,IAHA,IAAIC,EAAWJ,EAAIK,SAASC,OAExBC,GAAiB,EACZC,EAAI,EAAGA,EAAIJ,EAAUI,IAAK,CACjC,IAAIC,EAAOT,EAAIK,SAASG,GACpBE,EAASD,EAAKC,OAEdf,GAAkBe,EAAOC,gBAEzBD,EAAOE,eAAiBH,EAAKI,OACX,KAAfJ,EAAKI,OACJjB,GAAoBW,GACG,OAAxBG,EAAOE,cAEVF,EAAOE,aAAeH,EAAKI,MAC3BH,EAAOI,aAAeb,EACtBM,GAAiB,EACjBE,EAAKM,YAAc,CAACf,GACpBS,EAAKO,QAAU,EACfP,EAAKQ,cAAe,IAEpBR,EAAKQ,cAAe,EAEpBvB,EAAKgB,EAAOI,cAAcT,SAASG,GAAGQ,UACtCtB,EAAKgB,EAAOI,cAAcT,SAASG,GAAGO,YAAYzB,KAAKU,KAI7D,OAAOA,KAGTkB,OAAOC,OAAO3B,EAAU,CACtBM,YAIJ,SAASP,EAAeR,GAQtB,OAPAA,EAAQqC,SAAQ,SAAAV,GACVA,EAAOC,gBACTD,EAAOE,aAAe,KACtBF,EAAOI,aAAe,MAInB/B,E,iiBA1DTI,EAAWkC,WAAa,aCDxB,IAAMC,EAAQC,IAAOC,MAAV,KAILC,EAAKF,IAAOG,GAAV,KAGQ,kBAAEC,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAOC,kBAApB,QAAkC,iBACvC,kBAAED,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAOE,aAApB,QAA6B,WACxB,kBAAEF,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAQ,qBAArB,QAAsC,UAEhDG,EAAKP,IAAOQ,GAAV,KAGQ,kBAAEJ,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAOC,kBAApB,QAAkC,iBACvC,kBAAED,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAOE,aAApB,QAA6B,WACvB,kBAAEF,EAAF,EAAEA,MAAF,wBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAQ,sBAArB,QAAuC,SAKlDK,EACG,EAGHC,EAAY,SAACvB,EAAQhB,GAAT,OAAkBA,EAAKwC,QAAO,SAACC,EAAKnC,GAAN,aAAcmC,GAAG,UAAGnC,EAAIoC,cAAP,aAAG,EAAa1B,MAAS,IAE3E,SAAS2B,IACtB,IAAMtD,EAAUuD,IAAMC,SACpB,iBAAM,CACJ,CACEC,OAAQ,cACRC,SAAU,aACVC,OAAQ,QACR/B,eAAe,GAEjB,CACE6B,OAAQ,qBACRC,SAAU,aACVC,OAAQ,GACR/B,eAAe,GAEjB,CACE6B,OAAQ,wBACRC,SAAU,YACVC,OAAQ,GACR/B,eAAe,GAEjB,CACE6B,OAAQ,MACRC,SAAU,MACVC,OAAQ,SAAAxD,GAAI,OAAI+C,EAAU,MAAO/C,EAAKQ,QAExC,CACE8C,OAAQ,MACRC,SAAU,MACVC,OAAQ,SAAAxD,GAAI,OAAI+C,EAAU,MAAO/C,EAAKQ,QAExC,CACE8C,OAAQ,QACRjE,KAAM,kBACNoD,MAAO,CACLC,WAAY,MACZC,MAAO,QACP,aAAc,SAEhBY,SAAU,SAACzC,GAET,MADwB,CAAC,MAAO,OACTkC,QAAO,SAACC,EAAKzB,GAAN,OAAiBV,EAAIU,GAAUyB,IAAK,IAEpEO,OAAQ,SAAAxD,GAAI,OAAI+C,EAAU,QAAS/C,EAAKQ,WAG5C,IA9CiC,EAyD/BiD,mBAAS,CAAC5D,UAASG,QAAOC,GAP5ByD,EAlDiC,EAkDjCA,cACAC,EAnDiC,EAmDjCA,kBACAC,EApDiC,EAoDjCA,aACAC,EArDiC,EAqDjCA,aACArD,EAtDiC,EAsDjCA,KACAsD,EAvDiC,EAuDjCA,WACAlD,EAxDiC,EAwDjCA,QAGImD,EAAevD,EAAKwD,KAAI,SAAClD,EAAKC,GAElC,OADA+C,EAAWhD,GACJF,EAAQE,EAAKC,MAGtB,OACE,6BACE,2CACA,kBAACqB,EAAD,iBAAWsB,IAAX,CAA4BjB,MAAO,CAACwB,eAAgB,cAClD,+BACCL,EAAaI,KAAI,SAACE,GAAD,OAChB,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQJ,KAAI,SAACxC,GACxB,OACE,kBAACe,EAAD,eAAIE,MAAOjB,EAAOiB,OAAWjB,EAAO6C,kBACjC7C,EAAO8C,OAAO,mBAQzB,0BAAWX,IACVI,EAAaC,KAAI,SAAClD,EAAKC,GAAN,OAChB,uBAAQD,EAAIyD,cACTzD,EAAI0D,MAAMR,KAAI,SAAAzC,GAAS,IAAD,EACrB,OAAIA,EAAKQ,aAAqB,KAG5B,kBAACa,EAAD,eAAId,QAASP,EAAKO,QAASW,MAAK,OAAElB,QAAF,IAAEA,GAAF,UAAEA,EAAMC,cAAR,aAAE,EAAciB,OACxClB,EAAKkD,gBAAiBlD,EAAK+C,OAAO,iBAQjDxB,GACC,+BACCe,EAAaG,KAAI,SAAAU,GAAK,OACrB,uBAAQA,EAAMC,sBACXD,EAAMN,QAAQJ,KAAI,SAAAxC,GACjB,IAAMiB,EAAK,kCACNjB,QADM,IACNA,OADM,EACNA,EAAQiB,OADF,IAETC,WAAY,MACZC,MAAO,QACP,aAAcnB,EAAOgC,QAA4B,UAAlBhC,EAAOgC,OAAqB,QAAU,SAGvE,OACE,kBAACjB,EAAD,eAAIE,MAAOA,GAAWjB,EAAOoD,kBAAmBpD,EAAO8C,OAAO,qB,sBC5I1ExB,EAAS,CACb,CACEhD,MAAO,cACP+E,MAAO,cAET,CACE/E,MAAO,qBACP+E,MAAO,cAET,CACE/E,MAAO,wBACP+E,MAAO,aAET,CACE/E,MAAO,QACP+E,MAAO,SAET,CACE/E,MAAO,MACP+E,MAAO,QAII,SAASC,IACtB,OACE,yBAAKrC,MAAO,CAAEsC,SAAU,SACtB,8CACA,kBAAC,IAAD,CACEC,QAAS,CACPC,QAAQ,EACRC,WAAW,EACXC,QAAQ,EACRC,QAAS,SAEXvF,QAASiD,EACT9C,KAAMA,EACNF,MAAM,gB,0DC/BRuF,EAAYC,YAAW,CAC3BhD,MAAO,CACLiD,SAAU,OAIC,SAASC,IACtB,IAAMC,EAAUJ,IAEhB,OACE,6BACE,iDACE,kBAACK,EAAA,EAAD,CAAOC,UAAWF,EAAQnD,MAAOsD,KAAK,QAAQC,aAAW,iBACvD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,2BACA,kBAACA,EAAA,EAAD,8BACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,cAGJ,kBAACC,EAAA,EAAD,KACGjG,EAAKgE,KAAI,SAAClD,GAAD,OACR,kBAACiF,EAAA,EAAD,CAAUG,IAAKpF,EAAIzB,MACjB,kBAAC2G,EAAA,EAAD,KAAYlF,EAAIxB,YAChB,kBAAC0G,EAAA,EAAD,KAAYlF,EAAIvB,YAChB,kBAACyG,EAAA,EAAD,KAAYlF,EAAItB,WAChB,kBAACwG,EAAA,EAAD,CAAWG,MAAM,SAASrF,EAAIsF,OAC9B,kBAACJ,EAAA,EAAD,CAAWG,MAAM,SAASrF,EAAIrB,YC/B9C4G,IAAS/B,OACP,kBAAC,IAAMgC,WAAP,KACE,kBAACnD,EAAD,MACA,6BAEA,kBAACxD,EAAD,MACA,6BAEA,kBAAC,EAAD,MACA,6BAEA,kBAACmF,EAAD,OAEFyB,SAASC,eAAe,W","file":"static/js/main.9a53ef6b.chunk.js","sourcesContent":["export default [\r\n  {\r\n    uuid: '1',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 74,\r\n    pk2: 55\r\n  },\r\n  {\r\n    uuid: '2',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"KIND, Kind\",\r\n    pk1: 296,\r\n    pk2: 291\r\n  },\r\n  {\r\n    uuid: '3',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 12\r\n  },\r\n  {\r\n    uuid: '4',\r\n    chargeName: \"Vorverkaufsgebühr\",\r\n    chargeCode: \"VVG-C, 4\",\r\n    priceType: \"SCHU, Schüler\",\r\n    pk1: 0,\r\n    pk2: 3\r\n  },\r\n]\r\n","import React from 'react';\nimport Table from 'rc-table';\n\nimport data from '../rows';\n\nexport default function RcTable() {\n  const config = [\n    {\n      title: \"Charge name\",\n      dataIndex: \"chargeName\",\n    },\n    {\n      title: \"Charge code,number\",\n      dataIndex: \"chargeCode\",\n    },\n    {\n      title: \"Price type code, name\",\n      dataIndex: \"priceType\",\n    },\n    {\n      title: \"Total\",\n      dataIndex: \"total\",\n    },\n    {\n      title: \"PK1\",\n      dataIndex: \"pk1\",\n    }\n  ];\n\n  return (\n    <div>\n      <h2>rc-table</h2>\n      <Table rowKey=\"uuid\" columns={config} data={data} />\n    </div>\n  );\n}\n","import { useCallback } from 'react';\rimport { ensurePluginOrder } from 'react-table';\r\rexport const useRowSpan = hooks => {\r  hooks.useInstance.push(useInstance)\r  hooks.visibleColumns.push(visibleColumns)\r}\r\ruseRowSpan.pluginName = 'useRowSpan';\r\rfunction useInstance(instance) {\r  const {\r    plugins,\r    rows,\r    rowSpanEnabled = true,\r    rowSpanHierarchy = true\r  } = instance;\r\r  ensurePluginOrder(plugins, ['useFilters', 'useSortBy'], 'useRowSpan')\r\r  const spanRow = useCallback((row, i) => {\r    console.log('asldfj');\r    let numCells = row.allCells.length;\r\r    let parentBoundary = false;\r    for (let j = 0; j < numCells; j++) {\r      let cell = row.allCells[j];\r      let column = cell.column;\r\r      if (rowSpanEnabled && column.enableRowSpan) {\r        if (\r          column.topCellValue !== cell.value // we have a non-duplicate cell\r          || cell.value === \"\"             // or we have a blank cell\r          || (rowSpanHierarchy && parentBoundary) // or boundary crossed\r          || column.topCellValue === null // or we are on the first row\r        ) { // this is a top cell.\r          column.topCellValue = cell.value;\r          column.topCellIndex = i;\r          parentBoundary = true;\r          cell.spannedRows = [row];\r          cell.rowSpan = 1;\r          cell.isRowSpanned = false;\r        } else { // cell is a duplicate and should be row-spanned.\r          cell.isRowSpanned = true;\r          // update the top cell. need to reach back in the array.\r          rows[column.topCellIndex].allCells[j].rowSpan++;\r          rows[column.topCellIndex].allCells[j].spannedRows.push(row)\r        }\r      } // else rowspan disabled for this cell - do nothing.\r    }\r    return row;\r  })\r\r  Object.assign(instance, {\r    spanRow\r  })\r}\r\rfunction visibleColumns(columns) {\r  columns.forEach(column => {\r    if (column.enableRowSpan) {\r      column.topCellValue = null;\r      column.topCellIndex = 0;\r    }\r  })\r\r  return columns;\r}\r","import React from \"react\";\nimport {useTable} from \"react-table\";\nimport styled from \"styled-components\";\nimport {useRowSpan} from './useRowSpan';\n\nimport data from \"../rows\";\n\nconst TABLE = styled.table`\n  border: 1px solid black;\n  border-collapse: collapse;\n`;\nconst TH = styled.th`\n  border-right: 1px solid black;\n  border-top: 1px solid black;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  text-align: ${({style}) => style?.['text-align'] ?? \"left\"};\n`;\nconst TD = styled.td`\n  border: 1px solid black;\n  border-bottom: none;\n  background: ${({style}) => style?.background ?? \"transparent\"};\n  color: ${({style}) => style?.color ?? \"black\"};\n  font-weight: ${({style}) => style?.['font-weight'] ?? \"400\"};\n  text-aligh: left;\n  vertical-align: top;\n`;\n\nconst config = {\n  total: 2,\n}\n\nconst columnSum = (column, rows) => rows.reduce((sum, row) => sum + row.values?.[column], 0);\n\nexport default function ReactTable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Charge name\",\n        accessor: 'chargeName',\n        Footer: 'Total',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Charge code,number\",\n        accessor: \"chargeCode\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"Price type code, name\",\n        accessor: \"priceType\",\n        Footer: '',\n        enableRowSpan: true\n      },\n      {\n        Header: \"PK1\",\n        accessor: \"pk1\",\n        Footer: data => columnSum('pk1', data.rows)\n      },\n      {\n        Header: \"PK2\",\n        accessor: \"pk2\",\n        Footer: data => columnSum('pk2', data.rows)\n      },\n      {\n        Header: \"Total\",\n        uuid: 'horizontalTotal',\n        style: {\n          background: \"red\",\n          color: \"white\",\n          'text-align': 'right'\n        },\n        accessor: (row) => {\n          const columnsToInlude = [\"pk1\", \"pk2\"];\n          return columnsToInlude.reduce((sum, column) => row[column] + sum, 0);\n        },\n        Footer: data => columnSum('Total', data.rows),\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    spanRow,\n  } = useTable({columns, data}, useRowSpan);\n\n  const preparedRows = rows.map((row, i) => {\n    prepareRow(row);\n    return spanRow(row, i);\n  });\n\n  return (\n    <div>\n      <h2>react-table</h2>\n      <TABLE {...getTableProps()} style={{borderCollapse: \"collapse\"}}>\n        <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => {\n              return (\n                <TH style={column.style} {...column.getHeaderProps()}>\n                  {column.render(\"Header\")}\n                </TH>\n              );\n            })}\n          </tr>\n        ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n        {preparedRows.map((row, i) => (\n          <tr {...row.getRowProps()}>\n            {row.cells.map(cell => {\n              if (cell.isRowSpanned) return null;\n\n              return (\n                <TD rowSpan={cell.rowSpan} style={cell?.column?.style}\n                    {...cell.getCellProps()}>{cell.render('Cell')}\n                </TD>\n              )\n            })}\n          </tr>\n        ))}\n        </tbody>\n\n        {config.total && (\n          <tfoot>\n          {footerGroups.map(group => (\n            <tr {...group.getFooterGroupProps()}>\n              {group.headers.map(column => {\n                const style = {\n                  ...column?.style,\n                  background: 'red',\n                  color: 'white',\n                  'text-align': column.Footer && column.Footer !== 'Total' ? 'right' : 'left'\n                };\n\n                return (\n                  <TH style={style} {...column.getFooterProps()}>{column.render(\"Footer\")}</TH>\n                );\n              })}\n            </tr>\n          ))}\n          </tfoot>\n        )}\n      </TABLE>\n    </div>\n  );\n}\n","import React from \"react\";\nimport MaterialTableComponent from 'material-table';\n\nimport data from '../rows';\n\nconst config = [\n  {\n    title: \"Charge name\",\n    field: \"chargeName\",\n  },\n  {\n    title: \"Charge code,number\",\n    field: \"chargeCode\",\n  },\n  {\n    title: \"Price type code, name\",\n    field: \"priceType\",\n  },\n  {\n    title: \"Total\",\n    field: \"total\",\n  },\n  {\n    title: \"PK1\",\n    field: \"pk1\"\n  }\n];\n\nexport default function MaterialTable() {\n  return (\n    <div style={{ maxWidth: '100%' }}>\n      <h2>material-table</h2>\n      <MaterialTableComponent\n        options={{\n          search: false,\n          showTitle: false,\n          paging: false,\n          padding: 'dense'\n        }}\n        columns={config}\n        data={data}\n        title=\"Demo Title\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport data from '../rows';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 900,\n  },\n});\n\nexport default function MaterialUiTable() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h2>material UI table</h2>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Charge name</TableCell>\n              <TableCell>Charge code,number</TableCell>\n              <TableCell>Price type code, name</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>PK1</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row.uuid}>\n                <TableCell>{row.chargeName}</TableCell>\n                <TableCell>{row.chargeCode}</TableCell>\n                <TableCell>{row.priceType}</TableCell>\n                <TableCell align=\"right\">{row.total}</TableCell>\n                <TableCell align=\"right\">{row.pk1}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport RcTable from \"./tables/rc-table\";\nimport ReactTable from './tables/react-table'\nimport MaterialTable from \"./tables/material-table\";\nimport MaterialUITable from \"./tables/material-ui-table\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactTable />\n    <hr />\n\n    <RcTable />\n    <hr />\n\n    <MaterialUITable />\n    <hr />\n\n    <MaterialTable />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}